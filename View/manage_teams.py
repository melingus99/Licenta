# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'licenta_manage_teams.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget
import os


class UiManageTeams(QWidget):
    def __init__(self,parent,controller):
        super().__init__()

        self.controller=controller

        self.parent=parent
        self.resize(400,375)
        self.btn_back = QtWidgets.QPushButton(self)
        self.btn_back.setGeometry(QtCore.QRect(60, 310, 93, 28))
        self.btn_back.setObjectName("btn_back")
        self.btn_back.clicked.connect(self.exit)
        self.btn_save = QtWidgets.QPushButton(self)
        self.btn_save.setGeometry(QtCore.QRect(260, 310, 93, 28))
        self.btn_save.setObjectName("btn_save")
        self.btn_save.clicked.connect(self.save)
        self.btn_delete = QtWidgets.QPushButton(self)
        self.btn_delete.setGeometry(QtCore.QRect(160, 310, 93, 28))
        self.btn_delete.setObjectName("btn_delete")
        self.btn_delete.clicked.connect(self.delete)

        self.label_teams = QtWidgets.QLabel(self)
        self.label_teams.setGeometry(QtCore.QRect(20, 10, 55, 16))
        self.label_teams.setObjectName("label_teams")
        self.label_team_name = QtWidgets.QLabel(self)
        self.label_team_name.setGeometry(QtCore.QRect(220, 10, 75, 16))
        self.label_team_name.setObjectName("label_teams")
        self.label_pokepaste = QtWidgets.QLabel(self)
        self.label_pokepaste.setGeometry(QtCore.QRect(220, 70, 71, 16))
        self.label_pokepaste.setObjectName("label_pokepaste")

        self.textEdit_pokepaste = QtWidgets.QTextEdit(self)
        self.textEdit_pokepaste.setGeometry(QtCore.QRect(220, 90, 171, 171))
        self.textEdit_pokepaste.setObjectName("textEdit_pokepaste")

        self.lineEdit_team_name = QtWidgets.QLineEdit(self)
        self.lineEdit_team_name.setGeometry(QtCore.QRect(220, 30, 171, 22))
        self.lineEdit_team_name.setObjectName("lineEdit_team_name")
        self.listWidget = QtWidgets.QListWidget(self)
        self.listWidget.setGeometry(QtCore.QRect(10, 30, 191, 231))
        self.listWidget.setObjectName("listWidget")

        self.exception=QtWidgets.QMessageBox()
        self.exception.setWindowTitle("Warning")
        self.exception.setIcon(QtWidgets.QMessageBox.Critical)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

        self.populate_lists()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Form", "Manage teams"))
        self.btn_back.setText(_translate("Form", "Back"))
        self.btn_save.setText(_translate("Form", "Save"))
        self.btn_delete.setText(_translate("Form", "Delete"))
        self.label_teams.setText(_translate("Form", "Teams"))
        self.label_team_name.setText(_translate("Form", "Team name"))
        self.label_pokepaste.setText(_translate("Form", "PokePaste"))

    def populate_lists(self):

        self.listWidget.clear()

        teams=self.controller.read_teams()
        self.listWidget.addItems(teams)

        self.lineEdit_team_name.setText("best team 2021")

    def save(self):

        file_name=self.lineEdit_team_name.text()
        text=self.textEdit_pokepaste.toPlainText()
        try:
            if file_name=='':
                raise Exception
            if text=='':
                raise Exception
        except:
            self.exception.setText("Neither team name nor PokePaste must not be empty")
            self.exception.exec_()
            return


        self.controller.write_file(file_name,text)
        self.populate_lists()

    def exit(self):
        # self.parent.show()
        # self.parent.populate_lists()
        self.parent.back()
        self.close()


    def delete(self):
        item=self.listWidget.currentItem()
        try:
            if item==None:
                raise Exception
        except:
            self.exception.setText("a team must be selected before deleting")
            self.exception.exec_()
            return
        self.controller.delete(item.text())
        self.listWidget.removeItemWidget(item)
        self.populate_lists()
